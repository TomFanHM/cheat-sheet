---
const { frontmatter } = Astro.props;
---

<div class="bg-white px-6 py-32 lg:px-8">
  <div class="mx-auto max-w-3xl text-base leading-7 text-gray-700">
    <p class="text-base font-semibold leading-7 text-indigo-600">
      {frontmatter.category}
    </p>
    <h1
      class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl"
    >
      {frontmatter.title}
    </h1>
    <p class="mt-6 text-xl leading-8">{frontmatter.description}</p>
    <article class="mt-10 prose lg:prose-xl">
      <slot />
    </article>
  </div>
</div>

<script is:inline>
function main() {
  const codeBlocks = Array.from(document.querySelectorAll("pre"));
  for (const codeBlock of codeBlocks) {
    const wrapper = document.createElement("div");
    wrapper.className = "relative";
    const copyButton = document.createElement("button");
    copyButton.className =
      "absolute top-0 right-0 m-2 rounded-md bg-indigo-600 px-2.5 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600";
    copyButton.innerHTML = "Copy";

    const code = codeBlock.querySelector("code");

    if (code && codeBlock && codeBlock.parentNode) {
      codeBlock.appendChild(copyButton);
      codeBlock.parentNode.insertBefore(wrapper, codeBlock);
      wrapper.appendChild(codeBlock);

      copyButton.addEventListener("click", async () => {
        const text = code.innerText;
        await navigator.clipboard.writeText(text).then(() => {
          copyButton.innerText = "Copied";

          setTimeout(() => {
            copyButton.innerText = "Copy";
          }, 1000);
        });
      });
    }
  }
}

main();
</script>
